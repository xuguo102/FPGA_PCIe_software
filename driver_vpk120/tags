!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AMDEXERCISER_DEVICE	amd_pcie_exerciser.h	59;"	d
AMDEXERCISER_MAJOR_NUMBER	amd_pcie_exerciser.h	60;"	d
AMDEXERCISER_MINOR_NUMBER	amd_pcie_exerciser.h	61;"	d
AMDEXERCISER_NAME	amd_pcie_exerciser.h	58;"	d
CONFIG_MODULE_SIG	Makefile	/^CONFIG_MODULE_SIG=n$/;"	m
CRIT_ERR	amd_pcie_exerciser.h	67;"	d
DMA_BUF_SIZE	amd_pcie_exerciser.h	71;"	d
HAVE_IRQ	amd_pcie_exerciser.c	102;"	d	file:
HAVE_IRQ	amd_pcie_exerciser.c	95;"	d	file:
HAVE_KREG	amd_pcie_exerciser.c	103;"	d	file:
HAVE_REGION	amd_pcie_exerciser.c	101;"	d	file:
HAVE_REGION	amd_pcie_exerciser.c	94;"	d	file:
INCLUDE_VERMAGIC	amd_pcie_exerciser.mod.c	2;"	d	file:
IOCTL_READ_REG	amd_pcie_exerciser.c	504;"	d	file:
IOCTL_READ_REG	amd_pcie_exerciser.c	705;"	d	file:
IOCTL_WRITE_REG	amd_pcie_exerciser.c	505;"	d	file:
IOCTL_WRITE_REG	amd_pcie_exerciser.c	704;"	d	file:
KDIR	Makefile	/^KDIR := \/lib\/modules\/$(shell uname -r)\/build$/;"	m
KILOBYTES	amd_pcie_exerciser.h	63;"	d
MEGABYTES	amd_pcie_exerciser.h	64;"	d
NUM_SEMS	amd_pcie_exerciser.c	/^    NUM_SEMS$/;"	e	enum:__anon1	file:
PCI_EXERCISER_DEVICE_ID_AMD_PCIE	amd_pcie_exerciser.c	90;"	d	file:
PCI_EXERCISER_VENDOR_ID_AMD	amd_pcie_exerciser.c	87;"	d	file:
RegWrite	amd_pcie_exerciser.c	/^typedef union RegWrite {$/;"	u	file:
RegWrite	amd_pcie_exerciser.c	/^} RegWrite;$/;"	t	typeref:union:RegWrite	file:
Reg_ComplSize	amd_pcie_exerciser.h	/^    Reg_ComplSize,$/;"	e	enum:XbmDmaControlReg
Reg_ComplWithData	amd_pcie_exerciser.h	/^    Reg_ComplWithData,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceCS	amd_pcie_exerciser.h	/^    Reg_DeviceCS = 0, \/\/ NOTE(michiel): Control Status$/;"	e	enum:XbmDmaControlReg
Reg_DeviceDMACS	amd_pcie_exerciser.h	/^    Reg_DeviceDMACS,  \/\/ NOTE(michiel): DMA Control Status$/;"	e	enum:XbmDmaControlReg
Reg_DeviceDirectedLinkChange	amd_pcie_exerciser.h	/^    Reg_DeviceDirectedLinkChange,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCCompletionInfo	amd_pcie_exerciser.h	/^    Reg_DeviceFCCompletionInfo,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCControl	amd_pcie_exerciser.h	/^    Reg_DeviceFCControl,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCNonPostedInfo	amd_pcie_exerciser.h	/^    Reg_DeviceFCNonPostedInfo,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCPostedInfo	amd_pcie_exerciser.h	/^    Reg_DeviceFCPostedInfo,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceLinkTlpSize	amd_pcie_exerciser.h	/^    Reg_DeviceLinkTlpSize,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceLinkWidth	amd_pcie_exerciser.h	/^    Reg_DeviceLinkWidth,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceMSIControl	amd_pcie_exerciser.h	/^    Reg_DeviceMSIControl,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceMiscControl	amd_pcie_exerciser.h	/^    Reg_DeviceMiscControl,$/;"	e	enum:XbmDmaControlReg
Reg_ErrorInjectControl	amd_pcie_exerciser.h	/^    Reg_ErrorInjectControl,$/;"	e	enum:XbmDmaControlReg
Reg_ReadComplStatus	amd_pcie_exerciser.h	/^    Reg_ReadComplStatus,$/;"	e	enum:XbmDmaControlReg
Reg_ReadDMAPerf	amd_pcie_exerciser.h	/^    Reg_ReadDMAPerf,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpAddress	amd_pcie_exerciser.h	/^    Reg_ReadTlpAddress,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpCount	amd_pcie_exerciser.h	/^    Reg_ReadTlpCount,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpPattern	amd_pcie_exerciser.h	/^    Reg_ReadTlpPattern,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpSize	amd_pcie_exerciser.h	/^    Reg_ReadTlpSize,$/;"	e	enum:XbmDmaControlReg
Reg_WriteDMAPerf	amd_pcie_exerciser.h	/^    Reg_WriteDMAPerf,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpAddress	amd_pcie_exerciser.h	/^    Reg_WriteTlpAddress,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpCount	amd_pcie_exerciser.h	/^    Reg_WriteTlpCount,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpPattern	amd_pcie_exerciser.h	/^    Reg_WriteTlpPattern,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpSize	amd_pcie_exerciser.h	/^    Reg_WriteTlpSize,$/;"	e	enum:XbmDmaControlReg
SEM_DMA	amd_pcie_exerciser.c	/^    SEM_DMA,$/;"	e	enum:__anon1	file:
SEM_READ	amd_pcie_exerciser.c	/^    SEM_READ,$/;"	e	enum:__anon1	file:
SEM_READREG	amd_pcie_exerciser.c	/^    SEM_READREG,$/;"	e	enum:__anon1	file:
SEM_WAITFOR	amd_pcie_exerciser.c	/^    SEM_WAITFOR,$/;"	e	enum:__anon1	file:
SEM_WRITE	amd_pcie_exerciser.c	/^    SEM_WRITE,$/;"	e	enum:__anon1	file:
SEM_WRITEREG	amd_pcie_exerciser.c	/^    SEM_WRITEREG,$/;"	e	enum:__anon1	file:
SUCCESS	amd_pcie_exerciser.h	66;"	d
VERBOSE	amd_pcie_exerciser.h	69;"	d
XBMD_IOC_DISP_REGS	amd_pcie_exerciser.h	109;"	d
XBMD_IOC_INITCARD	amd_pcie_exerciser.h	107;"	d
XBMD_IOC_MAGIC	amd_pcie_exerciser.h	105;"	d
XBMD_IOC_RD_BMD_REG	amd_pcie_exerciser.h	143;"	d
XBMD_IOC_RD_CFG_REG	amd_pcie_exerciser.h	144;"	d
XBMD_IOC_READ_CMPL	amd_pcie_exerciser.h	122;"	d
XBMD_IOC_READ_CSIZE	amd_pcie_exerciser.h	124;"	d
XBMD_IOC_READ_CTRL	amd_pcie_exerciser.h	110;"	d
XBMD_IOC_READ_CWDATA	amd_pcie_exerciser.h	123;"	d
XBMD_IOC_READ_DIR_LINK	amd_pcie_exerciser.h	129;"	d
XBMD_IOC_READ_DMA_CTRL	amd_pcie_exerciser.h	111;"	d
XBMD_IOC_READ_ERRORINJECT	amd_pcie_exerciser.h	148;"	d
XBMD_IOC_READ_FC_CMPL	amd_pcie_exerciser.h	133;"	d
XBMD_IOC_READ_FC_CTRL	amd_pcie_exerciser.h	130;"	d
XBMD_IOC_READ_FC_NPOST	amd_pcie_exerciser.h	132;"	d
XBMD_IOC_READ_FC_POST	amd_pcie_exerciser.h	131;"	d
XBMD_IOC_READ_INTRPT	amd_pcie_exerciser.h	128;"	d
XBMD_IOC_READ_LINKLEN	amd_pcie_exerciser.h	126;"	d
XBMD_IOC_READ_LINKWDTH	amd_pcie_exerciser.h	125;"	d
XBMD_IOC_READ_MISC_CTL	amd_pcie_exerciser.h	127;"	d
XBMD_IOC_READ_RD_ADDR	amd_pcie_exerciser.h	117;"	d
XBMD_IOC_READ_RD_COUNT	amd_pcie_exerciser.h	119;"	d
XBMD_IOC_READ_RD_LEN	amd_pcie_exerciser.h	118;"	d
XBMD_IOC_READ_RD_PERF	amd_pcie_exerciser.h	121;"	d
XBMD_IOC_READ_RD_PTRN	amd_pcie_exerciser.h	116;"	d
XBMD_IOC_READ_WR_ADDR	amd_pcie_exerciser.h	112;"	d
XBMD_IOC_READ_WR_COUNT	amd_pcie_exerciser.h	114;"	d
XBMD_IOC_READ_WR_LEN	amd_pcie_exerciser.h	113;"	d
XBMD_IOC_READ_WR_PERF	amd_pcie_exerciser.h	120;"	d
XBMD_IOC_READ_WR_PTRN	amd_pcie_exerciser.h	115;"	d
XBMD_IOC_RESET	amd_pcie_exerciser.h	108;"	d
XBMD_IOC_WRITE_DIR_LINK	amd_pcie_exerciser.h	142;"	d
XBMD_IOC_WRITE_DMA_CTRL	amd_pcie_exerciser.h	134;"	d
XBMD_IOC_WRITE_ERRORINJECT	amd_pcie_exerciser.h	149;"	d
XBMD_IOC_WRITE_MISC_CTL	amd_pcie_exerciser.h	141;"	d
XBMD_IOC_WRITE_RD_COUNT	amd_pcie_exerciser.h	139;"	d
XBMD_IOC_WRITE_RD_LEN	amd_pcie_exerciser.h	138;"	d
XBMD_IOC_WRITE_RD_PTRN	amd_pcie_exerciser.h	140;"	d
XBMD_IOC_WRITE_WR_COUNT	amd_pcie_exerciser.h	136;"	d
XBMD_IOC_WRITE_WR_LEN	amd_pcie_exerciser.h	135;"	d
XBMD_IOC_WRITE_WR_PTRN	amd_pcie_exerciser.h	137;"	d
XBMD_IOC_WR_BMD_REG	amd_pcie_exerciser.h	145;"	d
XBMD_IOC_WR_CFG_REG	amd_pcie_exerciser.h	146;"	d
XBMD_REGISTER_SIZE	amd_pcie_exerciser.c	93;"	d	file:
XPCIe_Exit	amd_pcie_exerciser.c	/^XPCIe_Exit(xbmd_device *dev)$/;"	f	file:
XPCIe_IRQHandler	amd_pcie_exerciser.c	/^irqreturn_t XPCIe_IRQHandler(int irq, void *dev_id)$/;"	f
XPCIe_IRQMSIHandler	amd_pcie_exerciser.c	/^irqreturn_t XPCIe_IRQMSIHandler(int irq, void *dev_id)$/;"	f
XPCIe_InitCard	amd_pcie_exerciser.c	/^void XPCIe_InitCard(xbmd_device *dev)$/;"	f
XPCIe_InitiatorReset	amd_pcie_exerciser.c	/^void XPCIe_InitiatorReset(xbmd_device *dev)$/;"	f
XPCIe_Ioctl	amd_pcie_exerciser.c	/^long XPCIe_Ioctl(struct file *filp, unsigned int cmd, unsigned long arg)$/;"	f
XPCIe_Open	amd_pcie_exerciser.c	/^int XPCIe_Open(struct inode *inode, struct file *filp)$/;"	f
XPCIe_Probe	amd_pcie_exerciser.c	/^XPCIe_Probe(struct pci_dev *pci, const struct pci_device_id *pci_id)$/;"	f	file:
XPCIe_Read	amd_pcie_exerciser.c	/^ssize_t XPCIe_Read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)$/;"	f
XPCIe_ReadCfgReg	amd_pcie_exerciser.c	/^uint32_t XPCIe_ReadCfgReg(xbmd_device *dev, uint32_t byte) {$/;"	f
XPCIe_ReadReg	amd_pcie_exerciser.c	/^uint32_t XPCIe_ReadReg(xbmd_device *dev, uint32_t dw_offset)$/;"	f
XPCIe_Release	amd_pcie_exerciser.c	/^int XPCIe_Release(struct inode *inode, struct file *filp)$/;"	f
XPCIe_Remove	amd_pcie_exerciser.c	/^void XPCIe_Remove(struct pci_dev *pci)$/;"	f
XPCIe_Write	amd_pcie_exerciser.c	/^ssize_t XPCIe_Write(struct file *filp, const char __user *buf, size_t count,$/;"	f
XPCIe_WriteCfgReg	amd_pcie_exerciser.c	/^uint32_t XPCIe_WriteCfgReg(xbmd_device *dev, uint32_t byte, uint32_t val) {$/;"	f
XPCIe_WriteReg	amd_pcie_exerciser.c	/^void XPCIe_WriteReg(xbmd_device *dev, uint32_t dw_offset, uint32_t val)$/;"	f
XPCIe_driver	amd_pcie_exerciser.c	/^module_pci_driver(XPCIe_driver);$/;"	v
XPCIe_driver	amd_pcie_exerciser.c	/^static struct pci_driver XPCIe_driver = {$/;"	v	typeref:struct:pci_driver	file:
XPCIe_fops	amd_pcie_exerciser.c	/^struct file_operations XPCIe_fops = {$/;"	v	typeref:struct:file_operations
XPCIe_ids	amd_pcie_exerciser.c	/^static const struct pci_device_id XPCIe_ids[] =$/;"	v	typeref:struct:pci_device_id	file:
XbmDmaControlReg	amd_pcie_exerciser.h	/^typedef enum XbmDmaControlReg$/;"	g
XbmDmaControlReg	amd_pcie_exerciser.h	/^} XbmDmaControlReg;$/;"	t	typeref:enum:XbmDmaControlReg
amdexerciser_exit	amd_pcie_exerciser.c	/^EXPORT_SYMBOL_GPL(amdexerciser_exit);$/;"	v
amdexerciser_exit	amd_pcie_exerciser.c	/^void amdexerciser_exit(void)$/;"	f
baseAddr	amd_pcie_exerciser.c	/^    unsigned long baseAddr;$/;"	m	struct:xbmd_device	file:
baseLength	amd_pcie_exerciser.c	/^    unsigned long baseLength;$/;"	m	struct:xbmd_device	file:
baseVirtual	amd_pcie_exerciser.c	/^    void __iomem *baseVirtual;$/;"	m	struct:xbmd_device	file:
chrDev	amd_pcie_exerciser.c	/^    struct cdev   chrDev;$/;"	m	struct:xbmd_device	typeref:struct:xbmd_device::cdev	file:
class	amd_pcie_exerciser.c	/^static struct class* class;$/;"	v	typeref:struct:class	file:
gSem	amd_pcie_exerciser.c	/^struct semaphore gSem[NUM_SEMS];$/;"	v	typeref:struct:semaphore
irq	amd_pcie_exerciser.c	/^    int             irq;$/;"	m	struct:xbmd_device	file:
major	amd_pcie_exerciser.c	/^static int major;$/;"	v	file:
name	amd_pcie_exerciser.c	/^    const char *name;$/;"	m	struct:xbmd_device	file:
obj-m	Makefile	/^obj-m := amd_pcie_exerciser.o$/;"	m
pciDev	amd_pcie_exerciser.c	/^    struct pci_dev *pciDev;$/;"	m	struct:xbmd_device	typeref:struct:xbmd_device::pci_dev	file:
raw	amd_pcie_exerciser.c	/^    uint64_t raw;$/;"	m	union:RegWrite	file:
readAddr	amd_pcie_exerciser.c	/^    dma_addr_t    readAddr;$/;"	m	struct:xbmd_device	file:
readBuffer	amd_pcie_exerciser.c	/^    u8           *readBuffer;$/;"	m	struct:xbmd_device	file:
reg	amd_pcie_exerciser.c	/^        int reg;$/;"	m	struct:RegWrite::__anon2	file:
value	amd_pcie_exerciser.c	/^        int value;$/;"	m	struct:RegWrite::__anon2	file:
writeAddr	amd_pcie_exerciser.c	/^    dma_addr_t    writeAddr;$/;"	m	struct:xbmd_device	file:
writeBuffer	amd_pcie_exerciser.c	/^    u8           *writeBuffer;$/;"	m	struct:xbmd_device	file:
xbmd_device	amd_pcie_exerciser.c	/^typedef struct xbmd_device$/;"	s	file:
xbmd_device	amd_pcie_exerciser.c	/^} xbmd_device;$/;"	t	typeref:struct:xbmd_device	file:
