!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/root/xuguo/xilinx/xapp1052/app/XAPP1052/xbmd/kernel/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/9213292e/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
CRIT_ERR	xbmd.h	/^#define CRIT_ERR /;"	d
DMA_BUF_SIZE	xbmd.h	/^#define DMA_BUF_SIZE /;"	d
HAVE_IRQ	xbmd.c	/^#define HAVE_IRQ /;"	d	file:
HAVE_KREG	xbmd.c	/^#define HAVE_KREG /;"	d	file:
HAVE_REGION	xbmd.c	/^#define HAVE_REGION /;"	d	file:
IOCTL_READ_REG	xbmd.c	/^#define IOCTL_READ_REG(/;"	d	file:
IOCTL_WRITE_REG	xbmd.c	/^#define IOCTL_WRITE_REG(/;"	d	file:
KILOBYTES	xbmd.h	/^#define KILOBYTES(/;"	d
MEGABYTES	xbmd.h	/^#define MEGABYTES(/;"	d
NUM_SEMS	xbmd.c	/^        NUM_SEMS$/;"	e	enum:__anon26f4e6a10103	file:
PCI_DEVICE_ID_XILINX_PCIE	xbmd.c	/^#define PCI_DEVICE_ID_XILINX_PCIE /;"	d	file:
PCI_DEVICE_ID_XILINX_PCIE	xbmd_direct.c	/^#define PCI_DEVICE_ID_XILINX_PCIE /;"	d	file:
PCI_VENDOR_ID_XILINX	xbmd.c	/^#define PCI_VENDOR_ID_XILINX /;"	d	file:
PCI_VENDOR_ID_XILINX	xbmd_direct.c	/^#define PCI_VENDOR_ID_XILINX /;"	d	file:
RW_MAX_BYTES	xbmd_direct.c	/^#define RW_MAX_BYTES /;"	d	file:
RegWrite	xbmd.c	/^typedef union RegWrite {$/;"	u	file:
RegWrite	xbmd.c	/^} RegWrite;$/;"	t	typeref:union:RegWrite	file:
Reg_ComplSize	xbmd.h	/^    Reg_ComplSize,$/;"	e	enum:XbmDmaControlReg
Reg_ComplWithData	xbmd.h	/^    Reg_ComplWithData,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceCS	xbmd.h	/^    Reg_DeviceCS = 0, \/\/ NOTE(michiel): Control Status$/;"	e	enum:XbmDmaControlReg
Reg_DeviceDMACS	xbmd.h	/^    Reg_DeviceDMACS,  \/\/ NOTE(michiel): DMA Control Status$/;"	e	enum:XbmDmaControlReg
Reg_DeviceDirectedLinkChange	xbmd.h	/^    Reg_DeviceDirectedLinkChange,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCCompletionInfo	xbmd.h	/^    Reg_DeviceFCCompletionInfo,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCControl	xbmd.h	/^    Reg_DeviceFCControl,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCNonPostedInfo	xbmd.h	/^    Reg_DeviceFCNonPostedInfo,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceFCPostedInfo	xbmd.h	/^    Reg_DeviceFCPostedInfo,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceLinkTlpSize	xbmd.h	/^    Reg_DeviceLinkTlpSize,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceLinkWidth	xbmd.h	/^    Reg_DeviceLinkWidth,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceMSIControl	xbmd.h	/^    Reg_DeviceMSIControl,$/;"	e	enum:XbmDmaControlReg
Reg_DeviceMiscControl	xbmd.h	/^    Reg_DeviceMiscControl,$/;"	e	enum:XbmDmaControlReg
Reg_ReadComplStatus	xbmd.h	/^    Reg_ReadComplStatus,$/;"	e	enum:XbmDmaControlReg
Reg_ReadDMAPerf	xbmd.h	/^    Reg_ReadDMAPerf,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpAddress	xbmd.h	/^    Reg_ReadTlpAddress,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpCount	xbmd.h	/^    Reg_ReadTlpCount,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpPattern	xbmd.h	/^    Reg_ReadTlpPattern,$/;"	e	enum:XbmDmaControlReg
Reg_ReadTlpSize	xbmd.h	/^    Reg_ReadTlpSize,$/;"	e	enum:XbmDmaControlReg
Reg_WriteDMAPerf	xbmd.h	/^    Reg_WriteDMAPerf,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpAddress	xbmd.h	/^    Reg_WriteTlpAddress,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpCount	xbmd.h	/^    Reg_WriteTlpCount,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpPattern	xbmd.h	/^    Reg_WriteTlpPattern,$/;"	e	enum:XbmDmaControlReg
Reg_WriteTlpSize	xbmd.h	/^    Reg_WriteTlpSize,$/;"	e	enum:XbmDmaControlReg
SEM_DMA	xbmd.c	/^        SEM_DMA,$/;"	e	enum:__anon26f4e6a10103	file:
SEM_READ	xbmd.c	/^        SEM_READ,$/;"	e	enum:__anon26f4e6a10103	file:
SEM_READREG	xbmd.c	/^        SEM_READREG,$/;"	e	enum:__anon26f4e6a10103	file:
SEM_WAITFOR	xbmd.c	/^        SEM_WAITFOR,$/;"	e	enum:__anon26f4e6a10103	file:
SEM_WRITE	xbmd.c	/^        SEM_WRITE,$/;"	e	enum:__anon26f4e6a10103	file:
SEM_WRITEREG	xbmd.c	/^        SEM_WRITEREG,$/;"	e	enum:__anon26f4e6a10103	file:
SUCCESS	xbmd.h	/^#define SUCCESS /;"	d
VERBOSE	xbmd.h	/^#define VERBOSE /;"	d
XBMD_IOC_DISP_REGS	xbmd.h	/^#define XBMD_IOC_DISP_REGS /;"	d
XBMD_IOC_INITCARD	xbmd.h	/^#define XBMD_IOC_INITCARD /;"	d
XBMD_IOC_MAGIC	xbmd.h	/^#define XBMD_IOC_MAGIC /;"	d
XBMD_IOC_RD_BMD_REG	xbmd.h	/^#define XBMD_IOC_RD_BMD_REG /;"	d
XBMD_IOC_RD_CFG_REG	xbmd.h	/^#define XBMD_IOC_RD_CFG_REG /;"	d
XBMD_IOC_READ_CMPL	xbmd.h	/^#define XBMD_IOC_READ_CMPL /;"	d
XBMD_IOC_READ_CSIZE	xbmd.h	/^#define XBMD_IOC_READ_CSIZE /;"	d
XBMD_IOC_READ_CTRL	xbmd.h	/^#define XBMD_IOC_READ_CTRL /;"	d
XBMD_IOC_READ_CWDATA	xbmd.h	/^#define XBMD_IOC_READ_CWDATA /;"	d
XBMD_IOC_READ_DIR_LINK	xbmd.h	/^#define XBMD_IOC_READ_DIR_LINK /;"	d
XBMD_IOC_READ_DMA_CTRL	xbmd.h	/^#define XBMD_IOC_READ_DMA_CTRL /;"	d
XBMD_IOC_READ_FC_CMPL	xbmd.h	/^#define XBMD_IOC_READ_FC_CMPL /;"	d
XBMD_IOC_READ_FC_CTRL	xbmd.h	/^#define XBMD_IOC_READ_FC_CTRL /;"	d
XBMD_IOC_READ_FC_NPOST	xbmd.h	/^#define XBMD_IOC_READ_FC_NPOST /;"	d
XBMD_IOC_READ_FC_POST	xbmd.h	/^#define XBMD_IOC_READ_FC_POST /;"	d
XBMD_IOC_READ_INTRPT	xbmd.h	/^#define XBMD_IOC_READ_INTRPT /;"	d
XBMD_IOC_READ_LINKLEN	xbmd.h	/^#define XBMD_IOC_READ_LINKLEN /;"	d
XBMD_IOC_READ_LINKWDTH	xbmd.h	/^#define XBMD_IOC_READ_LINKWDTH /;"	d
XBMD_IOC_READ_MISC_CTL	xbmd.h	/^#define XBMD_IOC_READ_MISC_CTL /;"	d
XBMD_IOC_READ_RD_ADDR	xbmd.h	/^#define XBMD_IOC_READ_RD_ADDR /;"	d
XBMD_IOC_READ_RD_COUNT	xbmd.h	/^#define XBMD_IOC_READ_RD_COUNT /;"	d
XBMD_IOC_READ_RD_LEN	xbmd.h	/^#define XBMD_IOC_READ_RD_LEN /;"	d
XBMD_IOC_READ_RD_PERF	xbmd.h	/^#define XBMD_IOC_READ_RD_PERF /;"	d
XBMD_IOC_READ_RD_PTRN	xbmd.h	/^#define XBMD_IOC_READ_RD_PTRN /;"	d
XBMD_IOC_READ_WR_ADDR	xbmd.h	/^#define XBMD_IOC_READ_WR_ADDR /;"	d
XBMD_IOC_READ_WR_COUNT	xbmd.h	/^#define XBMD_IOC_READ_WR_COUNT /;"	d
XBMD_IOC_READ_WR_LEN	xbmd.h	/^#define XBMD_IOC_READ_WR_LEN /;"	d
XBMD_IOC_READ_WR_PERF	xbmd.h	/^#define XBMD_IOC_READ_WR_PERF /;"	d
XBMD_IOC_READ_WR_PTRN	xbmd.h	/^#define XBMD_IOC_READ_WR_PTRN /;"	d
XBMD_IOC_RESET	xbmd.h	/^#define XBMD_IOC_RESET /;"	d
XBMD_IOC_WRITE_DIR_LINK	xbmd.h	/^#define XBMD_IOC_WRITE_DIR_LINK /;"	d
XBMD_IOC_WRITE_DMA_CTRL	xbmd.h	/^#define XBMD_IOC_WRITE_DMA_CTRL /;"	d
XBMD_IOC_WRITE_MISC_CTL	xbmd.h	/^#define XBMD_IOC_WRITE_MISC_CTL /;"	d
XBMD_IOC_WRITE_RD_COUNT	xbmd.h	/^#define XBMD_IOC_WRITE_RD_COUNT /;"	d
XBMD_IOC_WRITE_RD_LEN	xbmd.h	/^#define XBMD_IOC_WRITE_RD_LEN /;"	d
XBMD_IOC_WRITE_RD_PTRN	xbmd.h	/^#define XBMD_IOC_WRITE_RD_PTRN /;"	d
XBMD_IOC_WRITE_WR_COUNT	xbmd.h	/^#define XBMD_IOC_WRITE_WR_COUNT /;"	d
XBMD_IOC_WRITE_WR_LEN	xbmd.h	/^#define XBMD_IOC_WRITE_WR_LEN /;"	d
XBMD_IOC_WRITE_WR_PTRN	xbmd.h	/^#define XBMD_IOC_WRITE_WR_PTRN /;"	d
XBMD_IOC_WR_BMD_REG	xbmd.h	/^#define XBMD_IOC_WR_BMD_REG /;"	d
XBMD_IOC_WR_CFG_REG	xbmd.h	/^#define XBMD_IOC_WR_CFG_REG /;"	d
XBMD_REGISTER_SIZE	xbmd.c	/^#define XBMD_REGISTER_SIZE /;"	d	file:
XPCIe_Exit	xbmd.c	/^XPCIe_Exit(xbmd_device *dev)$/;"	f	typeref:typename:void	file:
XPCIe_IRQHandler	xbmd.c	/^irqreturn_t XPCIe_IRQHandler(int irq, void *dev_id)$/;"	f	typeref:typename:irqreturn_t
XPCIe_IRQMSIHandler	xbmd.c	/^irqreturn_t XPCIe_IRQMSIHandler(int irq, void *dev_id)$/;"	f	typeref:typename:irqreturn_t
XPCIe_InitCard	xbmd.c	/^void XPCIe_InitCard(xbmd_device *dev)$/;"	f	typeref:typename:void
XPCIe_InitiatorReset	xbmd.c	/^void XPCIe_InitiatorReset(xbmd_device *dev)$/;"	f	typeref:typename:void
XPCIe_Intf	xbmd.c	/^struct file_operations XPCIe_Intf = {$/;"	v	typeref:struct:file_operations
XPCIe_Ioctl	xbmd.c	/^long XPCIe_Ioctl(struct file *filp, unsigned int cmd, unsigned long arg)$/;"	f	typeref:typename:long
XPCIe_Open	xbmd.c	/^int XPCIe_Open(struct inode *inode, struct file *filp)$/;"	f	typeref:typename:int
XPCIe_Probe	xbmd.c	/^XPCIe_Probe(struct pci_dev *pci, const struct pci_device_id *pci_id)$/;"	f	typeref:typename:int	file:
XPCIe_Read	xbmd.c	/^ssize_t XPCIe_Read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)$/;"	f	typeref:typename:ssize_t
XPCIe_ReadCfgReg	xbmd.c	/^u32 XPCIe_ReadCfgReg(xbmd_device *dev, u32 byte) {$/;"	f	typeref:typename:u32
XPCIe_ReadReg	xbmd.c	/^u32 XPCIe_ReadReg(xbmd_device *dev, u32 dw_offset)$/;"	f	typeref:typename:u32
XPCIe_Release	xbmd.c	/^int XPCIe_Release(struct inode *inode, struct file *filp)$/;"	f	typeref:typename:int
XPCIe_Remove	xbmd.c	/^void XPCIe_Remove(struct pci_dev *pci)$/;"	f	typeref:typename:void
XPCIe_Write	xbmd.c	/^ssize_t XPCIe_Write(struct file *filp, const char __user *buf, size_t count,$/;"	f	typeref:typename:ssize_t
XPCIe_WriteCfgReg	xbmd.c	/^u32 XPCIe_WriteCfgReg(xbmd_device *dev, u32 byte, u32 val) {$/;"	f	typeref:typename:u32
XPCIe_WriteReg	xbmd.c	/^void XPCIe_WriteReg(xbmd_device *dev, u32 dw_offset, u32 val)$/;"	f	typeref:typename:void
XPCIe_drive	xbmd.c	/^static struct pci_driver XPCIe_drive =$/;"	v	typeref:struct:pci_driver	file:
XPCIe_ids	xbmd.c	/^static const struct pci_device_id XPCIe_ids[] =$/;"	v	typeref:typename:const struct pci_device_id[]	file:
XbmDmaControlReg	xbmd.h	/^typedef enum XbmDmaControlReg$/;"	g
XbmDmaControlReg	xbmd.h	/^} XbmDmaControlReg;$/;"	t	typeref:enum:XbmDmaControlReg
__anon26f4e6a10103	xbmd.c	/^enum  {$/;"	g	file:
__anon26f4e6a10208	xbmd.c	/^    struct {$/;"	s	union:RegWrite	file:
all	Makefile	/^all:$/;"	t
baseAddr	xbmd.c	/^unsigned long baseAddr;$/;"	m	struct:xbmd_device	typeref:typename:unsigned long	file:
baseAddr	xbmd_direct.c	/^    unsigned long baseAddr;$/;"	m	struct:xbmd_device	typeref:typename:unsigned long	file:
baseLength	xbmd.c	/^    unsigned long baseLength;$/;"	m	struct:xbmd_device	typeref:typename:unsigned long	file:
baseLength	xbmd_direct.c	/^    unsigned long baseLength;$/;"	m	struct:xbmd_device	typeref:typename:unsigned long	file:
baseVirtual	xbmd.c	/^    void __iomem *baseVirtual;$/;"	m	struct:xbmd_device	typeref:typename:void __iomem *	file:
baseVirtual	xbmd_direct.c	/^    void __iomem *baseVirtual;$/;"	m	struct:xbmd_device	typeref:typename:void __iomem *	file:
chrDev	xbmd.c	/^    struct cdev   chrDev;$/;"	m	struct:xbmd_device	typeref:struct:cdev	file:
chrDev	xbmd_direct.c	/^    struct cdev   chrDev;$/;"	m	struct:xbmd_device	typeref:struct:cdev	file:
clean	Makefile	/^clean:$/;"	t
d2hAddr	xbmd_direct.c	/^    dma_addr_t    d2hAddr;$/;"	m	struct:xbmd_device	typeref:typename:dma_addr_t	file:
d2hBuffer	xbmd_direct.c	/^    u8           *d2hBuffer;$/;"	m	struct:xbmd_device	typeref:typename:u8 *	file:
dmaD2HDone	xbmd_direct.c	/^    u32           dmaD2HDone;$/;"	m	struct:xbmd_device	typeref:typename:u32	file:
dmaD2HQueue	xbmd_direct.c	/^    wait_queue_head_t dmaD2HQueue;$/;"	m	struct:xbmd_device	typeref:typename:wait_queue_head_t	file:
dmaD2HStart	xbmd_direct.c	/^    u32           dmaD2HStart;$/;"	m	struct:xbmd_device	typeref:typename:u32	file:
dmaH2DDone	xbmd_direct.c	/^    u32           dmaH2DDone;$/;"	m	struct:xbmd_device	typeref:typename:u32	file:
dmaH2DQueue	xbmd_direct.c	/^    wait_queue_head_t dmaH2DQueue;$/;"	m	struct:xbmd_device	typeref:typename:wait_queue_head_t	file:
dmaH2DStart	xbmd_direct.c	/^    u32           dmaH2DStart;$/;"	m	struct:xbmd_device	typeref:typename:u32	file:
dmaSem	xbmd_direct.c	/^    struct semaphore  dmaSem;$/;"	m	struct:xbmd_device	typeref:struct:semaphore	file:
gDrvrMajor	xbmd.c	/^int             gDrvrMajor = 241;           \/\/ Major number not dynamic.$/;"	v	typeref:typename:int
gDrvrMajor	xbmd_direct.c	/^int             gDrvrMajor = 245;           \/\/ Major number not dynamic.$/;"	v	typeref:typename:int
gDrvrMinor	xbmd.c	/^int             gDrvrMinor = 0;$/;"	v	typeref:typename:int
gDrvrMinor	xbmd_direct.c	/^int             gDrvrMinor = 0;$/;"	v	typeref:typename:int
gSem	xbmd.c	/^struct semaphore gSem[NUM_SEMS];$/;"	v	typeref:struct:semaphore[]
h2dAddr	xbmd_direct.c	/^    dma_addr_t    h2dAddr;$/;"	m	struct:xbmd_device	typeref:typename:dma_addr_t	file:
h2dBuffer	xbmd_direct.c	/^    u8           *h2dBuffer;$/;"	m	struct:xbmd_device	typeref:typename:u8 *	file:
irq	xbmd.c	/^    int             irq;$/;"	m	struct:xbmd_device	typeref:typename:int	file:
irq	xbmd_direct.c	/^    int             irq;$/;"	m	struct:xbmd_device	typeref:typename:int	file:
name	xbmd.c	/^    const char *name;$/;"	m	struct:xbmd_device	typeref:typename:const char *	file:
name	xbmd_direct.c	/^    char *name;$/;"	m	struct:xbmd_device	typeref:typename:char *	file:
obj-m	Makefile	/^obj-m := xbmd_direct.o$/;"	m
pciDev	xbmd.c	/^    struct pci_dev *pciDev;$/;"	m	struct:xbmd_device	typeref:struct:pci_dev *	file:
pciDev	xbmd_direct.c	/^    struct pci_dev *pciDev;$/;"	m	struct:xbmd_device	typeref:struct:pci_dev *	file:
raw	xbmd.c	/^    u64 raw;$/;"	m	union:RegWrite	typeref:typename:u64	file:
readAddr	xbmd.c	/^    dma_addr_t    readAddr;$/;"	m	struct:xbmd_device	typeref:typename:dma_addr_t	file:
readBuffer	xbmd.c	/^    u8           *readBuffer;$/;"	m	struct:xbmd_device	typeref:typename:u8 *	file:
reg	xbmd.c	/^        int reg;$/;"	m	struct:RegWrite::__anon26f4e6a10208	typeref:typename:int	file:
value	xbmd.c	/^        int value;$/;"	m	struct:RegWrite::__anon26f4e6a10208	typeref:typename:int	file:
writeAddr	xbmd.c	/^    dma_addr_t    writeAddr;$/;"	m	struct:xbmd_device	typeref:typename:dma_addr_t	file:
writeBuffer	xbmd.c	/^    u8           *writeBuffer;$/;"	m	struct:xbmd_device	typeref:typename:u8 *	file:
xbmd_device	xbmd.c	/^    } xbmd_device;$/;"	t	typeref:struct:xbmd_device	file:
xbmd_device	xbmd.c	/^typedef struct xbmd_device$/;"	s	file:
xbmd_device	xbmd_direct.c	/^typedef struct xbmd_device$/;"	s	file:
xbmd_device	xbmd_direct.c	/^} xbmd_device;$/;"	t	typeref:struct:xbmd_device	file:
xpcie_drive	xbmd_direct.c	/^static struct pci_driver xpcie_drive =$/;"	v	typeref:struct:pci_driver	file:
xpcie_exit	xbmd_direct.c	/^static void xpcie_exit(xbmd_device *dev)$/;"	f	typeref:typename:void	file:
xpcie_fops	xbmd_direct.c	/^struct file_operations xpcie_fops = {$/;"	v	typeref:struct:file_operations
xpcie_ids	xbmd_direct.c	/^static const struct pci_device_id xpcie_ids[] =$/;"	v	typeref:typename:const struct pci_device_id[]	file:
xpcie_init_card	xbmd_direct.c	/^static void xpcie_init_card(xbmd_device *dev)$/;"	f	typeref:typename:void	file:
xpcie_initiator_reset	xbmd_direct.c	/^static void xpcie_initiator_reset(xbmd_device *dev)$/;"	f	typeref:typename:void	file:
xpcie_irq_msi_handler	xbmd_direct.c	/^irqreturn_t xpcie_irq_msi_handler(int irq, void *dev_id)$/;"	f	typeref:typename:irqreturn_t
xpcie_open	xbmd_direct.c	/^static int xpcie_open(struct inode *inode, struct file *filep)$/;"	f	typeref:typename:int	file:
xpcie_probe	xbmd_direct.c	/^static int xpcie_probe(struct pci_dev *pci, const struct pci_device_id *pci_id)$/;"	f	typeref:typename:int	file:
xpcie_read	xbmd_direct.c	/^static ssize_t xpcie_read(struct file *filep, char __user *buf, size_t count, loff_t *f_pos)$/;"	f	typeref:typename:ssize_t	file:
xpcie_read_reg	xbmd_direct.c	/^static u32 xpcie_read_reg(xbmd_device *dev, u32 dwOffset)$/;"	f	typeref:typename:`u32	file:
xpcie_release	xbmd_direct.c	/^static int xpcie_release(struct inode *inode, struct file *filep)$/;"	f	typeref:typename:int	file:
xpcie_remove	xbmd_direct.c	/^void xpcie_remove(struct pci_dev *pci)$/;"	f	typeref:typename:void
xpcie_write	xbmd_direct.c	/^static ssize_t xpcie_write(struct file *filep, const char __user *buf, size_t count,$/;"	f	typeref:typename:ssize_t	file:
xpcie_write_reg	xbmd_direct.c	/^static void xpcie_write_reg(xbmd_device *dev, u32 dwOffset, u32 val)$/;"	f	typeref:typename:void	file:
